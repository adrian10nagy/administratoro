//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Administratoro.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AdministratoroEntities : DbContext
    {
        public AdministratoroEntities()
            : base("name=AdministratoroEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApartmentExpenses> ApartmentExpenses { get; set; }
        public virtual DbSet<ApartmentPersons> ApartmentPersons { get; set; }
        public virtual DbSet<Apartments> Apartments { get; set; }
        public virtual DbSet<ApartmentsDebt> ApartmentsDebt { get; set; }
        public virtual DbSet<AssociationCounters> AssociationCounters { get; set; }
        public virtual DbSet<AssociationCountersApartment> AssociationCountersApartment { get; set; }
        public virtual DbSet<AssociationCountersStairCase> AssociationCountersStairCase { get; set; }
        public virtual DbSet<AssociationExpenses> AssociationExpenses { get; set; }
        public virtual DbSet<AssociationExpensesRedistributionTypes> AssociationExpensesRedistributionTypes { get; set; }
        public virtual DbSet<AssociationExpensesUnitPrices> AssociationExpensesUnitPrices { get; set; }
        public virtual DbSet<Associations> Associations { get; set; }
        public virtual DbSet<DebtTypes> DebtTypes { get; set; }
        public virtual DbSet<DocumentApartmentFlyers> DocumentApartmentFlyers { get; set; }
        public virtual DbSet<DocumentAssociationMonthlyExpenses> DocumentAssociationMonthlyExpenses { get; set; }
        public virtual DbSet<ErrorLogs> ErrorLogs { get; set; }
        public virtual DbSet<Expenses> Expenses { get; set; }
        public virtual DbSet<ExpenseTypes> ExpenseTypes { get; set; }
        public virtual DbSet<Functionalities> Functionalities { get; set; }
        public virtual DbSet<InvoiceIndexes> InvoiceIndexes { get; set; }
        public virtual DbSet<Invoices> Invoices { get; set; }
        public virtual DbSet<InvoiceSubcategories> InvoiceSubcategories { get; set; }
        public virtual DbSet<InvoiceSubcategoryTypes> InvoiceSubcategoryTypes { get; set; }
        public virtual DbSet<Localities> Localities { get; set; }
        public virtual DbSet<PartnerRights> PartnerRights { get; set; }
        public virtual DbSet<Partners> Partners { get; set; }
        public virtual DbSet<PartnerTypes> PartnerTypes { get; set; }
        public virtual DbSet<Persons> Persons { get; set; }
        public virtual DbSet<RegistriesHome> RegistriesHome { get; set; }
        public virtual DbSet<RegistriesHomeDaily> RegistriesHomeDaily { get; set; }
        public virtual DbSet<StairCases> StairCases { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<ApartmentsGetAllEnabledForHeatHelp_Result> ApartmentsGetAllEnabledForHeatHelp(Nullable<int> associationId)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApartmentsGetAllEnabledForHeatHelp_Result>("ApartmentsGetAllEnabledForHeatHelp", associationIdParameter);
        }
    
        public virtual ObjectResult<ApartmentsGetByAss_Result> ApartmentsGetByAss(Nullable<int> associationId)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApartmentsGetByAss_Result>("ApartmentsGetByAss", associationIdParameter);
        }
    
        public virtual ObjectResult<ApartmentsGetByAssStairCase_Result> ApartmentsGetByAssStairCase(Nullable<int> associationId, Nullable<int> stairCaseId)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            var stairCaseIdParameter = stairCaseId.HasValue ?
                new ObjectParameter("stairCaseId", stairCaseId) :
                new ObjectParameter("stairCaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApartmentsGetByAssStairCase_Result>("ApartmentsGetByAssStairCase", associationIdParameter, stairCaseIdParameter);
        }
    
        public virtual ObjectResult<ApartmentsGetById_Result> ApartmentsGetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApartmentsGetById_Result>("ApartmentsGetById", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ApartmentsGetDependentsNr(Nullable<int> associationId)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ApartmentsGetDependentsNr", associationIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ApartmentsGetDependentsNrForStairCase(Nullable<int> associationId, Nullable<int> stairCase)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            var stairCaseParameter = stairCase.HasValue ?
                new ObjectParameter("stairCase", stairCase) :
                new ObjectParameter("stairCase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ApartmentsGetDependentsNrForStairCase", associationIdParameter, stairCaseParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ApartmentsGetSumOfIndiviza(Nullable<int> associationId)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ApartmentsGetSumOfIndiviza", associationIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DocumentApartmentFlyersAdd(Nullable<int> associationId, Nullable<int> apartmentId, Nullable<int> year, Nullable<int> month, string fileToPut, string fileType)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            var apartmentIdParameter = apartmentId.HasValue ?
                new ObjectParameter("apartmentId", apartmentId) :
                new ObjectParameter("apartmentId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var fileToPutParameter = fileToPut != null ?
                new ObjectParameter("fileToPut", fileToPut) :
                new ObjectParameter("fileToPut", typeof(string));
    
            var fileTypeParameter = fileType != null ?
                new ObjectParameter("fileType", fileType) :
                new ObjectParameter("fileType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DocumentApartmentFlyersAdd", associationIdParameter, apartmentIdParameter, yearParameter, monthParameter, fileToPutParameter, fileTypeParameter);
        }
    
        public virtual ObjectResult<PartnetGetByEmailPassword_Result> PartnetGetByEmailPassword(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PartnetGetByEmailPassword_Result>("PartnetGetByEmailPassword", emailParameter, passwordParameter);
        }
    
        public virtual int RegistriesHomeGetByAssAndDate(Nullable<int> associationId, Nullable<System.DateTime> transactionDate)
        {
            var associationIdParameter = associationId.HasValue ?
                new ObjectParameter("associationId", associationId) :
                new ObjectParameter("associationId", typeof(int));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistriesHomeGetByAssAndDate", associationIdParameter, transactionDateParameter);
        }
    }
}
